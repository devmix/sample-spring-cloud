server:
  port: 8080

endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true

management:
  port: 8990
  security:
    enabled: false

logging:
  level:
    root: INFO
    org.apache.kafka: INFO

eureka:
  instance:
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 5
  client:
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${SERVICE_REGISTRY_LIST:http://localhost:8761/eureka/}

spring:
  data:
    mongodb:
      host: ${MONGO_HOST:localhost}
      port: ${MONGO_PORT:27017}
      database: sample-spring-cloud
#      uri: mongodb://${spring.data.mongodb.host}/sample-spring-cloud
      repositories.enabled: true
    elasticsearch:
      clusterName: elasticsearch
      clusterNodes: ${ELASTIC_NODES:localhost:9300}

  cloud:
    bus:
      enabled: true
      trace:
        enabled: true

    stream:
#      default:
      bindings:
        springCloudBusInput:
          group: 'spring-global-bus-app-1'
#        springCloudBusOutput:
#          producer:
#            partitionCount: 3
        output:
          destination: stream-topic-1
          content-type: application/json

      kafka:
        binder:
          autoAddPartitions: true
        bindings:
          springCloudBusOutput:
            producer:
              configuration:
                request:
                  timeout:
                    ms: 15000
    kafka:
      binder:
        zkNodes: ${KAFKA_NODES:localhost:9092}
        brokers: ${KAFKA_BROKERS:localhost:2181}